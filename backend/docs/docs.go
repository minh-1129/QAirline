// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/aircrafts": {
            "get": {
                "description": "Get all aircrafts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aircrafts"
                ],
                "summary": "Get all aircrafts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Aircraft"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an aircraft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aircrafts"
                ],
                "summary": "Create an aircraft",
                "parameters": [
                    {
                        "description": "Aircraft object",
                        "name": "aircraft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Aircraft"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Aircraft"
                        }
                    }
                }
            }
        },
        "/api/v1/aircrafts/search/aircraft/{aircraft_type}": {
            "get": {
                "description": "Get aircrafts by aircraft type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aircrafts"
                ],
                "summary": "Get aircrafts by aircraft type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Aircraft Type",
                        "name": "aircraft_type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Aircraft"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/aircrafts/search/capacity/{capacity}": {
            "get": {
                "description": "Get all aircrafts by capacity threshold (\u003e= capacity)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aircrafts"
                ],
                "summary": "Get all aircrafts by capacity threshold (\u003e= capacity)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Aircraft Capacity",
                        "name": "capacity",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Aircraft"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/aircrafts/search/manufacturer/{aircraft_manufacturer}": {
            "get": {
                "description": "Get all aircrafts by aircraft manufacturer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aircrafts"
                ],
                "summary": "Get all aircrafts by aircraft manufacturer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Aircraft Manufacturer",
                        "name": "aircraft_manufacturer",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Aircraft"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/aircrafts/search/name/{aircraft_name}": {
            "get": {
                "description": "Get all aircrafts by aircraft name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aircrafts"
                ],
                "summary": "Get all aircrafts by aircraft name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Aircraft Name",
                        "name": "aircraft_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Aircraft"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/aircrafts/{aircraft_id}": {
            "get": {
                "description": "Get aircraft by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aircrafts"
                ],
                "summary": "Get aircraft by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Aircraft ID",
                        "name": "aircraft_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Aircraft"
                        }
                    }
                }
            },
            "put": {
                "description": "Update aircraft by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aircrafts"
                ],
                "summary": "Update aircraft by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Aircraft ID",
                        "name": "aircraft_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Aircraft object",
                        "name": "aircraft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Aircraft"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Aircraft"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove aircraft by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aircrafts"
                ],
                "summary": "Remove aircraft by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Aircraft ID",
                        "name": "aircraft_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/airports": {
            "get": {
                "description": "Get all airports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airports"
                ],
                "summary": "Get all airports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Airport"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/airports/city/{city}": {
            "get": {
                "description": "Get airport by city",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airports"
                ],
                "summary": "Get airport by city",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City",
                        "name": "city",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Airport"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/airports/iata/{iata}": {
            "get": {
                "description": "Get airport by IATA code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airports"
                ],
                "summary": "Get airport by IATA code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IATA code",
                        "name": "iata",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Airport"
                        }
                    }
                }
            }
        },
        "/api/v1/airports/icao/{icao}": {
            "get": {
                "description": "Get airport by ICAO code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airports"
                ],
                "summary": "Get airport by ICAO code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO code",
                        "name": "icao",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Airport"
                        }
                    }
                }
            }
        },
        "/api/v1/airports/id/{airport_id}": {
            "get": {
                "description": "Get airport by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "airports"
                ],
                "summary": "Get airport by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Airport ID",
                        "name": "airport_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Airport"
                        }
                    }
                }
            }
        },
        "/api/v1/bookings": {
            "get": {
                "description": "Get all bookings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get all bookings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Booking"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Create a booking",
                "parameters": [
                    {
                        "description": "Booking object",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Booking"
                        }
                    }
                }
            }
        },
        "/api/v1/bookings/search/booking/{booking_id}": {
            "get": {
                "description": "Get booking by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get booking by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "booking_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Booking"
                        }
                    }
                }
            }
        },
        "/api/v1/bookings/search/citizen/{citizen_id}": {
            "get": {
                "description": "Get booking by citizen ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get booking by citizen ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Citizen ID",
                        "name": "citizen_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Booking"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/bookings/search/flight/{flight_id}": {
            "get": {
                "description": "Get booking by flight ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get booking by flight ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Flight ID",
                        "name": "flight_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Booking"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/bookings/{booking_id}": {
            "put": {
                "description": "Update a booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Update a booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "booking_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Booking object",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Booking"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Remove a booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "booking_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/flights": {
            "get": {
                "description": "Get all flights",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get all flights",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Flight"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new flight",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Create a new flight",
                "parameters": [
                    {
                        "description": "Flight object",
                        "name": "flight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Flight"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/database.Flight"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/flights/roundtrip": {
            "get": {
                "description": "Fetch round-trip flights based on departure and arrival airports and times",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get round-trip flights",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Departure Airport",
                        "name": "departure",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Arrival Airport",
                        "name": "arrival",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Departure Time",
                        "name": "departure_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Return Time",
                        "name": "return_time",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "departing_flights and return_flights",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/flights/search": {
            "get": {
                "description": "Get flights by departure and arrival airports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get flights by departure and arrival airports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Departure Airport",
                        "name": "departure",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Arrival Airport",
                        "name": "arrival",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Flight"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/flights/search/flight_number/{flight_number}": {
            "get": {
                "description": "Get a flight by its flight number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get a flight by its flight number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Flight Number",
                        "name": "flight_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Flight"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/flights/search/oneway": {
            "get": {
                "description": "Get flights by departure and arrival airports and departure time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get flights by departure and arrival airports and departure time",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Departure Airport",
                        "name": "departure",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Arrival Airport",
                        "name": "arrival",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Departure Time",
                        "name": "departure_time",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Flight"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/flights/{flight_id}": {
            "get": {
                "description": "Get a flight by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get a flight by its ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Flight ID",
                        "name": "flight_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Flight"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a flight",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Update a flight",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Flight ID",
                        "name": "flight_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Flight object",
                        "name": "flight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Flight"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Flight"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a flight",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Remove a flight",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Flight ID",
                        "name": "flight_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/passengers": {
            "get": {
                "description": "Get all passengers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passengers"
                ],
                "summary": "Get all passengers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Passenger"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a passenger",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passengers"
                ],
                "summary": "Create a passenger",
                "parameters": [
                    {
                        "description": "Passenger object",
                        "name": "passenger",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Passenger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Passenger"
                        }
                    }
                }
            }
        },
        "/api/v1/passengers/booking/{booking_id}": {
            "get": {
                "description": "Get all passengers by booking ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passengers"
                ],
                "summary": "Get all passengers by booking ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "booking_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Passenger"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/passengers/passenger/{passenger_id}": {
            "get": {
                "description": "Get passenger by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passengers"
                ],
                "summary": "Get passenger by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Passenger ID",
                        "name": "passenger_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Passenger"
                        }
                    }
                }
            },
            "put": {
                "description": "Update passenger by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passengers"
                ],
                "summary": "Update passenger by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Passenger ID",
                        "name": "passenger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Passenger object",
                        "name": "passenger",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Passenger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Passenger"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a passenger",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passengers"
                ],
                "summary": "Remove a passenger",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Passenger ID",
                        "name": "passenger_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                }
            }
        },
        "/api/v1/users/search/citizen_id/{citizen_id}": {
            "get": {
                "description": "Get user by citizen ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by citizen ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Citizen ID",
                        "name": "citizen_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                }
            }
        },
        "/api/v1/users/user/{user_id}": {
            "get": {
                "description": "Get user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Remove user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Aircraft": {
            "type": "object",
            "properties": {
                "aircraft_id": {
                    "type": "integer"
                },
                "aircraft_manufacturer": {
                    "type": "string"
                },
                "aircraft_name": {
                    "type": "string"
                },
                "aircraft_type": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                }
            }
        },
        "database.Airport": {
            "type": "object",
            "properties": {
                "airport_id": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "iata": {
                    "type": "string"
                },
                "icao": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "timezone": {
                    "description": "Latitude  string\nLongitude string\nAltitude  string",
                    "type": "string"
                }
            }
        },
        "database.Booking": {
            "type": "object",
            "properties": {
                "booking_date": {
                    "type": "string"
                },
                "booking_id": {
                    "type": "integer"
                },
                "citizen_id": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                },
                "flight_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "seat_number": {
                    "type": "string"
                },
                "total_passengers": {
                    "type": "integer"
                }
            }
        },
        "database.Flight": {
            "type": "object",
            "properties": {
                "aircraft_id": {
                    "type": "integer"
                },
                "arrival_airport": {
                    "type": "string"
                },
                "arrival_time": {
                    "type": "string"
                },
                "board_time": {
                    "type": "string"
                },
                "departure_airport": {
                    "type": "string"
                },
                "departure_time": {
                    "type": "string"
                },
                "flight_id": {
                    "type": "integer"
                },
                "flight_number": {
                    "type": "string"
                },
                "gate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "database.Passenger": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "integer"
                },
                "citizen_id": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "passenger_id": {
                    "type": "integer"
                },
                "phone_number": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "seat_number": {
                    "type": "string"
                }
            }
        },
        "database.User": {
            "type": "object",
            "properties": {
                "citizen_id": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "hashed_password": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "sql.NullString": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
